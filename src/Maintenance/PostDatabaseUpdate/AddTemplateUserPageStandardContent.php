<?php

namespace BlueSpice\DistributionConnector\Maintenance\PostDatabaseUpdate;

use CommentStoreComment;
use LoggedUpdateMaintenance;
use MediaWiki\MediaWikiServices;
use MediaWiki\Revision\RevisionRecord;
use MediaWiki\Revision\SlotRecord;
use Title;
use User;

class AddTemplateUserPageStandardContent extends LoggedUpdateMaintenance {

	/**
	 * @inheritDoc
	 */
	protected function doDBUpdates() {
		$this->createNewTemplate( 'Userpage standard content' );

		return true;
	}

	/**
	 * @param string $titleText
	 */
	private function createNewTemplate( $titleText ) {
		$title = Title::makeTitle( NS_TEMPLATE, $titleText );

		if ( $title->exists() ) {
			$this->output( "...Page '{$title->getPrefixedDBkey()}'...exists\n" );
		} else {
			$this->output( "...Creating page '{$title->getPrefixedDBkey()}'..." );

			$wikipage = MediaWikiServices::getInstance()->getWikiPageFactory()->newFromTitle( $title );
			$content = $wikipage->getContentHandler()->makeContent( '', $title );

			$comment = CommentStoreComment::newUnsavedComment( 'Autogenerated' );

			$updater = $wikipage->newPageUpdater( User::newSystemUser( 'BSMaintenance' ) );
			$updater->setContent( SlotRecord::MAIN, $content );
			$newRevision = $updater->saveRevision( $comment );
			if ( $newRevision instanceof RevisionRecord ) {
				$this->output( "done.\n" );
			} else {
				$this->output( "error.\n" );
			}
		}
	}

	/**
	 * @inheritDoc
	 */
	protected function getUpdateKey() {
		return 'bs-cloudclient-add-empty-template-userpage-standard-content';
	}
}
